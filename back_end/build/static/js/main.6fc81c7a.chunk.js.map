{"version":3,"sources":["services/loginService.js","history.js","reducers/loginReducer.js","reducers/notificationReducer.js","components/login.js","services/signUpService.js","reducers/registerReducer.js","components/register.js","services/dataService.js","reducers/dataReducer.js","components/dataForm.js","components/dataList.js","components/notification.js","components/updateForm.js","App.js","reducers/filterReducer.js","store.js","index.js"],"names":["login","credentials","a","axios","post","res","data","createHistory","loginReducer","state","action","type","newNotification","dispatch","initialState","message","notificationReducer","console","log","mapDispatchToProps","userLogin","loginService","then","response","JSON","stringify","username","window","localStorage","setItem","history","push","error","ConnectedLogin","connect","props","useState","setUsername","password","setPassword","Segment","placeholder","Grid","columns","relaxed","stackable","Column","Form","onSubmit","e","preventDefault","Input","icon","value","onChange","target","iconPosition","label","Button","content","primary","verticalAlign","as","Link","to","size","Divider","vertical","withRouter","register","config","headers","registerReducer","registeredUser","userRegister","signUpService","ConnectedRegister","user","Field","required","token","getAll","get","create","Authorization","update","put","id","remove","delete","setToken","newToken","dataReducer","map","x","filter","newEntry","entry","dataService","ConnectedForm","itemName","setItemName","itemDescription","setItemDescription","image","setImage","item","FormData","append","files","ConnectedList","activeItem","setActiveItem","handleLogoOut","clear","handleItemClick","name","Menu","Item","active","onClick","position","width","item_name","Image","src","cloudImage","ConnectedNotification","notification","Message","success","Header","style","display","setTimeout","negative","ConnectedUpdateForm","edit","item_description","event","ConnectedApp","loggedUser","initAll","entries","setUser","useEffect","loggedUserJSON","getItem","currentUser","parse","Container","exact","path","render","match","params","find","toString","filterReducer","reducer","combineReducers","store","createStore","applyMiddleware","thunk","renderApp","ReactDOM","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.6fc81c7a.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async (credentials) => {\r\n    const res = await axios.post(baseUrl, credentials)\r\n    return res.data\r\n}\r\n\r\nexport default { login }","import createHistory from 'history/createBrowserHistory'\r\n\r\nexport default createHistory()","import loginService from '../services/loginService'\r\n\r\nimport history from '../history'\r\nexport const userLogin = (data) => {\r\n\r\n    return dispatch => {\r\n        const user = loginService.login(data).then(response => {\r\n            dispatch({\r\n                type: 'LOGIN',\r\n                data: JSON.stringify(response)\r\n            })\r\n            dispatch({\r\n                type: 'NEW',\r\n                data: { message: `Welcome ${JSON.stringify(response.username)}`, type: 'success' }\r\n            })\r\n            window.localStorage.setItem(\r\n                'loggedappUser', JSON.stringify(response)\r\n            )\r\n            history.push('/')\r\n        },\r\n            error => {\r\n                dispatch({\r\n                    type: 'NEW',\r\n                    data: { message: 'Invalid credentials.', type: 'negative' }\r\n                })\r\n            })\r\n    }\r\n}\r\nconst loginReducer = (state = null, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN': return action.data\r\n        default: return state\r\n    }\r\n}\r\nexport default loginReducer","\r\nexport const newNotification = (data) => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: 'NEW',\r\n            data: data\r\n        })\r\n\r\n    }\r\n}\r\nconst initialState = { message: null, type: null }\r\n\r\nconst notificationReducer = (state = initialState, action) => {\r\n    console.log(action.type)\r\n    switch (action.type) {\r\n        case 'NEW': return action.data\r\n        default: return state\r\n    }\r\n}\r\nexport default notificationReducer\r\n","import { connect } from 'react-redux'\r\nimport React, { useState } from 'react'\r\nimport { userLogin } from '../reducers/loginReducer'\r\nimport { newNotification } from '../reducers/notificationReducer'\r\nimport { Button, Divider, Form, Grid, Segment } from 'semantic-ui-react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\n\r\n\r\nconst LoginForm = (props) => {\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault()\r\n        const credentials = {\r\n            username: username,\r\n            password: password\r\n        }\r\n        props.userLogin(credentials)\r\n    }\r\n\r\n        return (\r\n            <div>\r\n                <Segment placeholder>\r\n                    <Grid columns={2} relaxed='very' stackable>\r\n                        <Grid.Column>\r\n                            <Form onSubmit={handleLogin}>\r\n                                <Form.Input icon='user' value={username} onChange={({ target }) => setUsername(target.value)} iconPosition='left' label='Username' placeholder='Username' />\r\n                                <Form.Input icon='lock' type='password' value={password} onChange={({ target }) => setPassword(target.value)} iconPosition='left' label='Password' type='password' />\r\n                                <Button type='submit' content='Login' primary />\r\n                            </Form>\r\n                        </Grid.Column>\r\n                        <Grid.Column verticalAlign='middle'>\r\n                            <Button as={Link} to='/register' content='Sign up' icon='signup' size='big' />\r\n                        </Grid.Column>\r\n                    </Grid>\r\n                    <Divider vertical>Or</Divider>\r\n                </Segment>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const mapDispatchToProps = {\r\n        userLogin,\r\n        newNotification\r\n    }\r\n\r\n    const ConnectedLogin = connect(null, mapDispatchToProps)(LoginForm)\r\n    export default withRouter(ConnectedLogin)","import axios from 'axios'\r\nconst baseUrl = '/api/register'\r\n\r\nconst register = async (credentials) => {\r\n    const config = { headers: { 'Content-Type': 'application/json ' } }\r\n    const res = await axios.post(baseUrl, credentials, config)\r\n    return res.data\r\n}\r\nexport default { register }","import signUpService from '../services/signUpService'\r\n\r\n// export const userRegister =  (data) => {\r\n//     return async dispatch => {\r\n//         const userToRegister = await signUpService.register(data)\r\n//         console.log(userToRegister)\r\n\r\n//         dispatch({\r\n//             type: 'REGISTER',\r\n//             registeredUser: userToRegister\r\n//         })\r\n//     }\r\n// }\r\n\r\nexport const userRegister = (data) => {\r\n    return dispatch => {\r\n        return signUpService.register(data).then(\r\n            response => {\r\n                dispatch({\r\n                    type: 'REGISTER',\r\n                    registeredUser: response.data\r\n                })\r\n                dispatch({\r\n                    type: 'NEW',\r\n                    data: { message: 'Success! You can log in now :)', type: 'success' }\r\n                })\r\n            },\r\n            error => {\r\n                dispatch({\r\n                    type: 'NEW',\r\n                    data: { message: 'There is some kind of error, try again.', type: 'negative' }\r\n                })\r\n            }\r\n        )\r\n\r\n    }\r\n}\r\nconst registerReducer = (state = {}, action) => {\r\n    console.log(action.type)\r\n    console.log(action.registeredUser)\r\n\r\n    switch (action.type) {\r\n        default: return state\r\n    }\r\n\r\n}\r\nexport default registerReducer\r\n\r\n\r\n\r\n","import React, { useState } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { userRegister } from '../reducers/registerReducer'\r\nimport { newNotification } from '../reducers/notificationReducer'\r\nimport { Form, Button } from 'semantic-ui-react'\r\nimport { connect } from 'react-redux'\r\nconst Register = (props) => {\r\n\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        const user = { username: username, password: password }   \r\n        props.userRegister(user)\r\n        props.history.push('/login')\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Form.Field>\r\n                <label>First Name</label>\r\n                <input placeholder='First Name' value={username} onChange={({ target }) => setUsername(target.value)} required />\r\n            </Form.Field>\r\n            <Form.Field>\r\n                <label>Last Name</label>\r\n                <input placeholder='Password' type='password' value={password} onChange={({ target }) => setPassword(target.value)} required />\r\n            </Form.Field>\r\n            <Button type='submit'>Submit</Button>\r\n        </Form>\r\n    )\r\n\r\n}\r\nconst mapDispatchToProps = {\r\n    userRegister,\r\n    newNotification\r\n}\r\nconst ConnectedRegister = connect(null, mapDispatchToProps)(Register)\r\nexport default withRouter(ConnectedRegister)","import axios from 'axios'\r\nconst baseUrl = '/api/items'\r\n\r\nlet token = null\r\nconst setToken = newToken => {\r\n    token = `bearer ${newToken}`\r\n}\r\nconst getAll = async () => {\r\n    const res = await axios.get(baseUrl)\r\n    return res.data\r\n}\r\n\r\nconst create = async (data) => {\r\n    const config = {\r\n        headers: { 'content-type': 'multipart/form-data', Authorization: token }\r\n    }\r\n    const res = await axios.post(baseUrl, data, config)\r\n    return res.data\r\n}\r\n\r\nconst update = async (data) => {\r\n    const res = await axios.put(`${baseUrl}/${data.id}`, data)\r\n    return res.data\r\n}\r\n\r\nconst remove = async (data) => {\r\n    const res = await axios.delete(`${baseUrl}/${data.id}`)\r\n}\r\n\r\nexport default { getAll, create, update, remove, setToken }","\r\nimport dataService from '../services/dataService'\r\n\r\n\r\nexport const newEntry = (data) => {\r\n    return dispatch => {\r\n        const entry = dataService.create(data).then(response => {\r\n            dispatch({\r\n                type: 'CREATE',\r\n                data: entry\r\n            })\r\n            dispatch({\r\n                type: 'NEW',\r\n                data: { message: 'Success! New item added!', type: 'success' }\r\n            })\r\n        },\r\n            error => {\r\n                dispatch({\r\n                    type: 'NEW',\r\n                    data: { message: 'Error creating item. Please try again.', type: 'negative' }\r\n                })\r\n            })\r\n\r\n    }\r\n}\r\nexport const initAll = (data) => {\r\n    return async dispatch => {\r\n        const entries = await dataService.getAll(data)\r\n        dispatch({\r\n            type: 'INIT',\r\n            data: entries\r\n        })\r\n    }\r\n}\r\nexport const edit = (data) => {\r\n    return async dispatch => {\r\n        const entry = await dataService.update(data).then(response => {\r\n            dispatch({\r\n                type: 'UPDATE',\r\n                data: entry\r\n            })\r\n            dispatch({\r\n                type: 'NEW',\r\n                data: { message: 'Success! Item updated!', type: 'success' }\r\n            })\r\n\r\n        },\r\n            error => {\r\n                dispatch({\r\n                    type: 'NEW',\r\n                    data: { message: 'Error updating item. Please try again.', type: 'negative' }\r\n                })\r\n            })\r\n\r\n    }\r\n}\r\nexport const remove = (data) => {\r\n    return async dispatch => {\r\n        const entry = await dataService.remove(data).then(response => {\r\n            dispatch({\r\n                type: 'DELETE',\r\n                id: data.id\r\n            })\r\n            dispatch({\r\n                type: 'NEW',\r\n                data: { message: 'Success! Item removed!', type: 'success' }\r\n            })\r\n        },\r\n            error => {\r\n                dispatch({\r\n                    type: 'NEW',\r\n                    data: { message: 'Error deleting item. Please try again.', type: 'negative' }\r\n                })\r\n            })\r\n\r\n    }\r\n}\r\n\r\nconst dataReducer = (state = [], action) => {\r\n    console.log(action.type)\r\n\r\n    switch (action.type) {\r\n        case 'INIT': return action.data\r\n        case 'CREATE': return [...state, action.data]\r\n        case 'UPDATE': return state.map(x => x.id === action.data.id ? x : action.data)\r\n        case 'DELETE': return state.filter(x => x.id !== action.data.id)\r\n        default: return state\r\n    }\r\n\r\n}\r\n\r\nexport default dataReducer","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { newEntry } from '../reducers/dataReducer'\r\nimport { newNotification } from '../reducers/notificationReducer'\r\n\r\nconst DataForm = (props) => {\r\n    const [itemName, setItemName] = useState('')\r\n    const [itemDescription, setItemDescription] = useState('')\r\n    const [image, setImage] = useState(null)\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        const item = new FormData()\r\n\r\n        item.append('item_name', itemName)\r\n        item.append('item_description', itemDescription)\r\n        item.append('clodImage', image)\r\n        props.newEntry(item)\r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div><input type='text' value={itemName} onChange={({ target }) => setItemName(target.value)} /></div>\r\n            <div><input type='text' value={itemDescription} onChange={({ target }) => setItemDescription(target.value)} /></div>\r\n            <input type=\"file\" onChange={({ target }) => setImage(target.files[0])} />\r\n            <button type='submit'>Sumbit</button>\r\n        </form>\r\n    )\r\n}\r\nconst mapDispatchToProps = {\r\n    newEntry,\r\n    newNotification\r\n}\r\n\r\nconst ConnectedForm = connect(null, mapDispatchToProps)(DataForm)\r\nexport default ConnectedForm","import React, { useState } from 'react'\r\nimport { Grid, Image } from 'semantic-ui-react'\r\nimport { connect } from 'react-redux'\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\r\nimport { Container, Button, Dropdown, Menu } from 'semantic-ui-react'\r\n\r\nconst DataList = (props) => {\r\n    const [activeItem, setActiveItem] = useState('home')\r\n    const handleLogoOut = () => {\r\n        window.localStorage.clear()\r\n    }\r\n    const handleItemClick = (e, { name }) => setActiveItem(name)\r\n\r\n    const Nav = () => {\r\n        return (\r\n            <Menu size='large'>\r\n                <Menu.Item name='home' as={Link} to='/home' active={activeItem === 'home'} onClick={handleItemClick} />\r\n                <Menu.Item name='create' as={Link} to='/create' active={activeItem === 'messages'} onClick={handleItemClick} />\r\n                <Menu.Menu position='right'>\r\n                    <Menu.Item>\r\n                        <Button as={Link} to='/login' onClick={handleLogoOut} primary> Login</Button>\r\n                    </Menu.Item>\r\n                </Menu.Menu>\r\n            </Menu>\r\n        )\r\n    }\r\n    return (\r\n        <div>\r\n            <Nav />\r\n            {props.data.map(x => <Grid>\r\n                <Grid.Column width={4}>\r\n                    {x.item_name}\r\n                </Grid.Column>\r\n                <Grid.Column width={9}>\r\n                    <Image src={x.cloudImage} />\r\n                </Grid.Column>\r\n                <Button as={Link} to={`/edit/${x.id}`} primary>Edit</Button>\r\n            </Grid>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        data: state.data\r\n    }\r\n}\r\n\r\nconst ConnectedList = connect(mapStateToProps, null)(DataList)\r\nexport default ConnectedList","import React from 'react'\r\nimport { Message } from 'semantic-ui-react'\r\nimport { connect } from 'react-redux'\r\nimport { newNotification } from '../reducers/notificationReducer'\r\nconst Notification = (props) => {\r\n    if (props.notification.message === null) {\r\n        return null\r\n    }\r\n\r\n    const type = props.notification.type === 'success' ? 'positive' : 'negative'\r\n    if (props.notification.type === 'success') {\r\n        return (\r\n            <div>\r\n                <Message success >\r\n                    <Message.Header>{props.notification.message}</Message.Header>\r\n                </Message>\r\n                <p style={{ display: 'none'} } > { setTimeout(()=> props.newNotification({message: null, type: null }),5000)}</p>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div>\r\n            <Message negative>\r\n                <Message.Header>{props.notification.message}</Message.Header>\r\n                <p>Try again please.</p>\r\n                <p style={{ display: 'none'} } > { setTimeout(()=> props.newNotification({message: null, type: null }),5000)}</p>\r\n        </Message>\r\n        \r\n        </div >\r\n    )\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        notification: state.notification\r\n    }\r\n}\r\nconst ConnectedNotification = connect(mapStateToProps, { newNotification })(Notification)\r\nexport default ConnectedNotification ","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { edit } from '../reducers/dataReducer'\r\n\r\n\r\nconst DataForm = (props) => {\r\n\r\n    const [itemName, setItemName] = useState(props.item.item_name)\r\n    const [itemDescription, setItemDescription] = useState(props.item.item_description)\r\n    const [image, setImage] = useState(null)\r\n\r\n    const handleTitleChange = (event) => {\r\n        setItemName(event.target.value)\r\n    }\r\n    const handleDescriptionChange = (event) => {\r\n        setItemDescription(event.target.value)\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        console.log(itemName);\r\n        const item = new FormData()\r\n\r\n        item.append('item_name', itemName)\r\n        item.append('item_description', itemDescription)\r\n        item.append('clodImage', image)\r\n        props.edit(item)\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div><input type='text' value={itemName} onChange={handleTitleChange} /></div>\r\n            <div><input type='text' value={itemDescription} onChange={handleDescriptionChange} /></div>\r\n            <input type=\"file\" onChange={({ target }) => setImage(target.files[0])} />\r\n            <button type='submit'>Update</button>\r\n        </form>\r\n    )\r\n}\r\nconst ConnectedUpdateForm = connect(null, { edit })(DataForm)\r\nexport default ConnectedUpdateForm","import React, { useState, useEffect } from 'react';\nimport Login from './components/login'\nimport Register from './components/register'\nimport dataService from './services/dataService'\nimport Form from './components/dataForm'\nimport List from './components/dataList'\nimport Notification from './components/notification'\nimport UpdateForm from './components/updateForm'\nimport { initAll } from './reducers/dataReducer'\nimport { BrowserRouter as Router, Route, Link, Redirect } from 'react-router-dom'\nimport { Container, Button, Dropdown, Menu } from 'semantic-ui-react'\nimport { connect } from 'react-redux';\nconst App = (props) => {\n\n    const [user, setUser] = useState(null)\n\n    useEffect(() => {\n        props.initAll()\n        const loggedUserJSON = window.localStorage.getItem('loggedappUser')\n        if (loggedUserJSON) {\n            console.log(loggedUserJSON)\n            const currentUser = JSON.parse(loggedUserJSON)\n            console.log(currentUser)\n            setUser(JSON.parse(loggedUserJSON))\n            dataService.setToken(currentUser.token)\n        }\n    }, [props.user])\n\n\n    // useEffect(() => {\n    //     if (props.user) {\n    //         setUser(props.user)\n    //         dataService.setToken(user.token)\n    //     }\n    //     props.initAll()\n\n    // }, [])\n\n    const matchId = (id) => props.data.find(x => x.id === id.toString())\n\n    // const handleLogoOut = () => {\n    //     window.localStorage.clear()\n    // }\n    // const handleItemClick = (e, { name }) => setActiveItem(name)\n\n    return (\n        <Container>\n            <Router>\n\n                <Route exact path='/edit/:id' render={({ match }) => <UpdateForm item={matchId(match.params.id)} />} />\n                <Route exact path='/' render={() => user ? <List /> : <Redirect to='/login' />} />\n                <Route path='/login' render={() => user === null ? <Login /> : <Redirect to='/' />} />\n                <Route path='/register' render={() => <Register />} />\n                <Route path='/create' render={() => <Form />} />\n                <Notification />\n            </Router>\n        </Container>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        data: state.data,\n        user: state.loggedUser\n    }\n}\nconst ConnectedApp = connect(mapStateToProps, { initAll })(App)\nexport default ConnectedApp\n","\r\nexport const filterDreams = (data) => {\r\n    return{\r\n        type:'NEW_FILTER',\r\n        data:data\r\n    }\r\n}\r\n\r\nconst filterReducer = (state = '', action) => {\r\n    switch (action.type) {\r\n        case 'NEW_FILTER': return action.data\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default filterReducer","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport dataReducer from './reducers/dataReducer'\r\nimport loginReducer from './reducers/loginReducer'\r\nimport filterReducer from './reducers/filterReducer'\r\nimport registerReducer from './reducers/registerReducer'\r\nimport notificationReducer from './reducers/notificationReducer'\r\n\r\nconst reducer = combineReducers({\r\n    data: dataReducer,\r\n    filter: filterReducer,\r\n    loggedUser: loginReducer,\r\n    registeredUser: registerReducer,\r\n    notification: notificationReducer\r\n})\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk))\r\nexport default store","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport App from './App'\r\nimport store from './store'\r\n\r\n\r\nconst renderApp = () => {\r\n    ReactDOM.render(\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>,\r\n        document.getElementById('root')\r\n    )\r\n}\r\n\r\nrenderApp()\r\nstore.subscribe(renderApp)"],"sourceRoot":""}
{"version":3,"sources":["services/loginService.js","reducers/loginReducer.js","components/login.js","components/singleItem.js","services/signUpService.js","reducers/registerReducer.js","reducers/notificationReducer.js","components/register.js","services/dataService.js","reducers/dataReducer.js","components/dataForm.js","components/dataList.js","components/notification.js","components/updateForm.js","services/userService.js","components/profile.js","App.js","reducers/filterReducer.js","store.js","index.js"],"names":["login","credentials","a","axios","post","res","data","initialState","username","token","id","loginReducer","state","action","type","ConnectedLogin","connect","user","userLogin","dispatch","loginService","then","response","message","window","localStorage","setItem","JSON","stringify","error","props","useState","setUsername","password","setPassword","className","Segment","placeholder","Grid","columns","relaxed","stackable","Column","Form","onSubmit","e","preventDefault","Input","icon","value","onChange","target","iconPosition","label","Button","content","primary","verticalAlign","as","Link","to","size","Divider","vertical","withRouter","Item","width","item","item_name","date","item_description","Image","src","cloudImage","register","config","headers","registerReducer","newNotification","notificationReducer","mapDispatchToProps","userRegister","signUpService","registeredUser","ConnectedRegister","history","push","Field","required","getAll","get","create","Authorization","update","put","remove","delete","setToken","newToken","destroyToken","dataReducer","map","x","filter","newEntry","dataService","ConnectedForm","itemName","setItemName","itemDescription","setItemDescription","image","setImage","FormData","append","TextArea","style","minHeight","files","ConnectedList","notification","ConnectedNotification","Message","success","Header","display","setTimeout","negative","edit","ConnectedUpdateForm","event","onClick","getUserInfo","ConnectedProfile","items","setItems","useEffect","userService","Table","striped","Row","HeaderCell","Body","Cell","item_rating","initAll","entries","userLogOut","ConnectedApp","setUser","activeItem","setActiveItem","matchId","find","toString","handleItemClick","name","loggedUserJSON","getItem","currentUser","parse","handleLogoOut","clear","Container","Menu","active","position","path","render","exact","match","params","filterReducer","reducer","combineReducers","store","createStore","applyMiddleware","thunk","renderApp","ReactDOM","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.0851486f.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async (credentials) => {\r\n    const res = await axios.post(baseUrl, credentials)\r\n    return res.data\r\n}\r\n\r\nexport default { login }","import loginService from '../services/loginService'\r\n\r\nexport const userLogin = (data) => {\r\n\r\n    return dispatch => {\r\n        const user = loginService.login(data).then(response => {\r\n            dispatch({\r\n                type: 'LOGIN',\r\n                data: response\r\n            })\r\n            dispatch({\r\n                type: 'NEW',\r\n                data: { message: `Welcome ${response.username}!`, type: 'success' }\r\n            })\r\n            window.localStorage.setItem(\r\n                'loggedappUser', JSON.stringify(response)\r\n            )\r\n\r\n        },\r\n            error => {\r\n                dispatch({\r\n                    type: 'NEW',\r\n                    data: { message: 'Invalid credentials.', type: 'negative' }\r\n                })\r\n            })\r\n    }\r\n}\r\nexport const userLogOut = () => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: 'LOGOUT'\r\n        })\r\n        dispatch({\r\n            type: 'NEW',\r\n            data: { message: `See ya later.`, type: 'success' }\r\n        })\r\n    }\r\n}\r\nconst initialState = { username: null, token: null, id: null }\r\nconst loginReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN': return action.data\r\n        case 'LOGOUT': return initialState\r\n        default: return state\r\n    }\r\n}\r\nexport default loginReducer","import { connect } from 'react-redux'\r\nimport React, { useState } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport { userLogin } from '../reducers/loginReducer'\r\nimport { Button, Divider, Form, Grid, Segment } from 'semantic-ui-react'\r\n\r\nimport './style.css'\r\n\r\nconst LoginForm = (props) => {\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault()\r\n        const credentials = {\r\n            username: username,\r\n            password: password\r\n        }\r\n        props.userLogin(credentials)\r\n    }\r\n\r\n    return (\r\n        <div className='dcontainer'>\r\n            <Segment placeholder>\r\n                <Grid columns={2} relaxed='very' stackable>\r\n                    <Grid.Column>\r\n                        <Form onSubmit={handleLogin}>\r\n                            <Form.Input icon='user' value={username} onChange={({ target }) => setUsername(target.value)} iconPosition='left' label='Username' placeholder='Username' />\r\n                            <Form.Input icon='lock' type='password' value={password} onChange={({ target }) => setPassword(target.value)} iconPosition='left' label='Password' />\r\n                            <Button type='submit' content='Login' primary />\r\n                        </Form>\r\n                    </Grid.Column>\r\n                    <Grid.Column verticalAlign='middle'>\r\n                        <Button as={Link} to='/register' content='Sign up' icon='signup' size='big' />\r\n                    </Grid.Column>\r\n                </Grid>\r\n                <Divider vertical>Or</Divider>\r\n            </Segment>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nconst ConnectedLogin = connect(mapStateToProps, { userLogin })(LoginForm)\r\nexport default withRouter(ConnectedLogin)","import React from 'react'\r\nimport { Grid, Image, GridColumn } from 'semantic-ui-react'\r\n\r\nconst Item = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <Grid>\r\n                <Grid.Column width={4}>\r\n                    <h2>{props.item.item_name}</h2> <p>Added on:{props.item.date}</p>\r\n                    <p> {props.item.item_description}</p>\r\n                </Grid.Column>\r\n                <Grid.Column width={6}>\r\n                    <Image src={props.item.cloudImage} />\r\n                </Grid.Column>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\nexport default Item","import axios from 'axios'\r\nconst baseUrl = '/api/register'\r\n\r\nconst register = async (credentials) => {\r\n    const config = { headers: { 'Content-Type': 'application/json ' } }\r\n    const res = await axios.post(baseUrl, credentials, config)\r\n    return res.data\r\n}\r\nexport default { register }","import signUpService from '../services/signUpService'\r\n\r\nexport const userRegister = (data) => {\r\n    return dispatch => {\r\n        return signUpService.register(data).then(\r\n            response => {\r\n                dispatch({\r\n                    type: 'REGISTER',\r\n                    registeredUser: response.data\r\n                })\r\n                dispatch({\r\n                    type: 'NEW',\r\n                    data: { message: 'Success! You can log in now :)', type: 'success' }\r\n                })\r\n            },\r\n            error => {\r\n                dispatch({\r\n                    type: 'NEW',\r\n                    data: { message: 'There is some kind of error, try again.', type: 'negative' }\r\n                })\r\n            }\r\n        )\r\n\r\n    }\r\n}\r\nconst registerReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        default: return state\r\n    }\r\n}\r\nexport default registerReducer\r\n\r\n\r\n\r\n","export const newNotification = (data) => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: 'NEW',\r\n            data: data\r\n        })\r\n\r\n    }\r\n}\r\nconst initialState = { message: null, type: null }\r\n\r\nconst notificationReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'NEW': return action.data\r\n        default: return state\r\n    }\r\n}\r\nexport default notificationReducer\r\n","import { connect } from 'react-redux'\r\nimport React, { useState } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { Form, Button, Segment } from 'semantic-ui-react'\r\n\r\nimport { userRegister } from '../reducers/registerReducer'\r\nimport { newNotification } from '../reducers/notificationReducer'\r\n\r\nimport './style.css'\r\n\r\n\r\nconst Register = (props) => {\r\n\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        const user = { username: username, password: password }\r\n        props.userRegister(user)\r\n        props.history.push('/login')\r\n    }\r\n\r\n    return (\r\n        <div className='dcontainer'>\r\n        <Segment placeholder>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Field className='register'>\r\n                    <label>Username</label>\r\n                    <input placeholder='Username' value={username} onChange={({ target }) => setUsername(target.value)} required />\r\n                </Form.Field>\r\n                <Form.Field className='register'>\r\n                    <label>Password</label>\r\n                    <input placeholder='Password' type='password' value={password} onChange={({ target }) => setPassword(target.value)} required />\r\n                </Form.Field>\r\n                <Button type='submit'>Submit</Button>\r\n            </Form>\r\n        </Segment>\r\n        </div>\r\n    )\r\n\r\n}\r\nconst mapDispatchToProps = {\r\n    userRegister,\r\n    newNotification\r\n}\r\nconst ConnectedRegister = connect(null, mapDispatchToProps)(Register)\r\nexport default withRouter(ConnectedRegister)","import axios from 'axios'\r\nconst baseUrl = '/api/items'\r\n\r\nlet token = null\r\nconst setToken = newToken => {\r\n    token = `bearer ${newToken}`\r\n}\r\nconst destroyToken = () => {\r\n    token = null\r\n}\r\nconst getAll = async () => {\r\n    const res = await axios.get(baseUrl)\r\n    return res.data\r\n}\r\n\r\nconst create = async (data) => {\r\n    const config = {\r\n        headers: { 'content-type': 'multipart/form-data', Authorization: token }\r\n    }\r\n    const res = await axios.post(baseUrl, data, config)\r\n    return res.data\r\n}\r\n\r\nconst update = async (data, id) => {\r\n    const config = { headers: { 'content-type': 'multipart/form-data', Authorization: token } }\r\n    const res = await axios.put(`${baseUrl}/${id}`, data, config)\r\n    return res.data\r\n}\r\n\r\nconst remove = async (id) => {\r\n    const config = { headers: { Authorization: token } }\r\n    const res = await axios.delete(`${baseUrl}/${id}`,config)\r\n}\r\n\r\nexport default { getAll, create, update, remove, setToken, destroyToken }","import dataService from '../services/dataService'\r\n\r\nexport const newEntry = (data) => {\r\n    return dispatch => {\r\n        const entry = dataService.create(data).then(response => {\r\n            dispatch({\r\n                type: 'CREATE',\r\n                data: response\r\n            })\r\n            dispatch({\r\n                type: 'NEW',\r\n                data: { message: 'Success! New item added!', type: 'success' }\r\n            })\r\n        },\r\n            error => {\r\n                dispatch({\r\n                    type: 'NEW',\r\n                    data: { message: 'Error creating item. Please try again.', type: 'negative' }\r\n                })\r\n            })\r\n\r\n    }\r\n}\r\nexport const initAll = (data) => {\r\n    return async dispatch => {\r\n        const entries = await dataService.getAll(data)\r\n        dispatch({\r\n            type: 'INIT',\r\n            data: entries\r\n        })\r\n    }\r\n}\r\nexport const edit = (data,id) => {\r\n    return async dispatch => {\r\n        const entry = await dataService.update(data,id).then(response => {\r\n            dispatch({\r\n                type: 'UPDATE',\r\n                data: response,\r\n                id:id\r\n            })\r\n            dispatch({\r\n                type: 'NEW',\r\n                data: { message: 'Success! Item updated!', type: 'success' }\r\n            })\r\n\r\n        },\r\n            error => {\r\n                dispatch({\r\n                    type: 'NEW',\r\n                    data: { message: 'Error updating item. Please try again.', type: 'negative' }\r\n                })\r\n            })\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const remove = (data) => {\r\n    return async dispatch => {\r\n        const entry = await dataService.remove(data).then(response => {\r\n            dispatch({\r\n                type: 'DELETE',\r\n                id: data\r\n            })\r\n            dispatch({\r\n                type: 'NEW',\r\n                data: { message: 'Success! Item removed!', type: 'success' }\r\n            })\r\n        },\r\n            error => {\r\n                dispatch({\r\n                    type: 'NEW',\r\n                    data: { message: 'Error deleting item. Please try again.', type: 'negative' }\r\n                })\r\n            })\r\n\r\n    }\r\n}\r\n\r\nconst dataReducer = (state = [], action) => {\r\n   \r\n    switch (action.type) {\r\n        case 'INIT': return action.data\r\n        case 'CREATE': return [...state, action.data]\r\n        case 'UPDATE': return state.map(x => x.id !== action.id ? x : action.data)\r\n        case 'DELETE': return state.filter(x => x.id !== action.id)\r\n        default: return state\r\n    }\r\n\r\n}\r\n\r\nexport default dataReducer","import { connect } from 'react-redux'\r\nimport React, { useState } from 'react'\r\nimport { newEntry } from '../reducers/dataReducer'\r\nimport { Button, Form, TextArea } from 'semantic-ui-react'\r\nimport { newNotification } from '../reducers/notificationReducer'\r\n\r\nimport './style.css'\r\n\r\nconst DataForm = (props) => {\r\n\r\n    const [itemName, setItemName] = useState('')\r\n    const [itemDescription, setItemDescription] = useState('')\r\n    const [image, setImage] = useState(null)\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        const item = new FormData()\r\n        item.append('item_name', itemName)\r\n        item.append('item_description', itemDescription)\r\n        item.append('clodImage', image)\r\n        props.newEntry(item)\r\n    }\r\n\r\n    return (\r\n        <div className='dataForm'>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Field>\r\n                    <input type='text' value={itemName} onChange={({ target }) => setItemName(target.value)} required placeholder='Movie title' width={9} />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                    <TextArea style={{ minHeight: 100 }} value={itemDescription} onChange={({ target }) => setItemDescription(target.value)} placeholder='Description' />\r\n                </Form.Field>\r\n                <input type=\"file\" onChange={({ target }) => setImage(target.files[0])} />\r\n                <Button type='submit'>submit</Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\nconst mapDispatchToProps = {\r\n    newEntry,\r\n    newNotification\r\n}\r\n\r\nconst ConnectedForm = connect(null, mapDispatchToProps)(DataForm)\r\nexport default ConnectedForm\r\n\r\n\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Grid, Image } from 'semantic-ui-react'\r\nimport { Container, Button } from 'semantic-ui-react'\r\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom'\r\n\r\nimport './style.css'\r\n\r\nconst DataList = (props) => {\r\n\r\n    return (\r\n        <div className='dataGrid'>\r\n            {props.data.map(x => <div> <Grid>\r\n                <Grid.Column width={7}>\r\n                    <div><h2>{x.item_name}</h2> <em>Added on: {x.date}</em></div>\r\n                    <p>{x.item_description}</p>\r\n\r\n                </Grid.Column>\r\n                <Grid.Column width={7}>\r\n                    <Image src={x.cloudImage} />\r\n                </Grid.Column>\r\n            </Grid>\r\n            </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        data: state.data,\r\n        user: state.user,\r\n        notification: state.notification\r\n    }\r\n}\r\n\r\nconst ConnectedList = connect(mapStateToProps, null)(DataList)\r\nexport default withRouter(ConnectedList)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Message } from 'semantic-ui-react'\r\nimport { newNotification } from '../reducers/notificationReducer'\r\n\r\nconst Notification = (props) => {\r\n\r\n    if (props.notification.message === null) {\r\n        return null\r\n    }\r\n    const type = props.notification.type === 'success' ? 'positive' : 'negative'\r\n    if (props.notification.type === 'success') {\r\n        return (\r\n            <div>\r\n                <Message success >\r\n                    <Message.Header>{props.notification.message}</Message.Header>\r\n                </Message>\r\n                <p style={{ display: 'none'} } > { setTimeout(()=> props.newNotification({message: null, type: null }),1000)}</p>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div>\r\n            <Message negative>\r\n                <Message.Header>{props.notification.message}</Message.Header>\r\n                <p>Try again please.</p>\r\n                <p style={{ display: 'none'} } > { setTimeout(()=> props.newNotification({message: null, type: null }),5000)}</p>\r\n        </Message>\r\n        \r\n        </div >\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        notification: state.notification\r\n    }\r\n}\r\n\r\nconst ConnectedNotification = connect(mapStateToProps, { newNotification })(Notification)\r\nexport default ConnectedNotification ","import { connect } from 'react-redux'\r\nimport React, { useState } from 'react'\r\nimport { edit } from '../reducers/dataReducer'\r\nimport { remove } from '../reducers/dataReducer'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { Button, Form, TextArea } from 'semantic-ui-react'\r\n\r\nconst DataForm = (props) => {\r\n\r\n    const [itemName, setItemName] = useState(props.item.item_name)\r\n    const [itemDescription, setItemDescription] = useState(props.item.item_description)\r\n    const [image, setImage] = useState(null)\r\n\r\n    const handleTitleChange = (event) => {\r\n        setItemName(event.target.value)\r\n    }\r\n    const handleDescriptionChange = (event) => {\r\n        setItemDescription(event.target.value)\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        const item = new FormData()\r\n        item.append('item_name', itemName)\r\n        item.append('item_description', itemDescription)\r\n        item.append('clodImage', image)\r\n        const id = props.item.id\r\n        props.edit(item, id)\r\n    }\r\n    const deleteItem = () => {\r\n        props.remove(props.item.id)\r\n        props.history.push('/')\r\n    }\r\n\r\n    return (\r\n        <div className='dataForm'>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Field>\r\n                    <input type='text' value={itemName} onChange={handleTitleChange} required placeholder='Movie title' width={9} />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                    <TextArea style={{ minHeight: 100 }} value={itemDescription} onChange={handleDescriptionChange} placeholder='Description' />\r\n                </Form.Field>\r\n                <input type=\"file\" onChange={({ target }) => setImage(target.files[0])} />\r\n                <Button type='submit'>Update</Button>\r\n            </Form>\r\n            <div><Button onClick={deleteItem}>Delete</Button></div>\r\n        </div>\r\n    )\r\n}\r\nconst mapDispatchToProps = {\r\n    edit,\r\n    remove\r\n}\r\nconst ConnectedUpdateForm = connect(null, mapDispatchToProps)(DataForm)\r\nexport default withRouter(ConnectedUpdateForm)\r\n\r\n\r\n","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/users'\r\n\r\nconst getUserInfo = async (data) => {\r\n    const res = await axios.get(`${baseUrl}/${data}`)\r\n    return res.data\r\n}\r\n\r\nexport default { getUserInfo }","import { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Table, Button } from 'semantic-ui-react'\r\nimport userService from '../services/userService'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\n\r\nconst UserProfile = props => {\r\n\r\n    const [items, setItems] = useState([])\r\n    useEffect(() => {\r\n        const x = userService.getUserInfo(props.user.id).then(res => {\r\n            setItems([...items, ...res.items])\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <em>{props.user.username} is logged in.</em>\r\n            <h2>My entries</h2>\r\n            <Table striped>\r\n                <Table.Header>\r\n                    <Table.Row>\r\n                        <Table.HeaderCell>Movie</Table.HeaderCell>\r\n                        <Table.HeaderCell>Date </Table.HeaderCell>\r\n                        <Table.HeaderCell>Rating</Table.HeaderCell>\r\n                    </Table.Row>\r\n                </Table.Header>\r\n                <Table.Body>\r\n                    {items.map(item =>\r\n                        <Table.Row>\r\n                            <Table.Cell>{item.item_name}</Table.Cell>\r\n                            <Table.Cell>{item.date}</Table.Cell>\r\n                            <Table.Cell>{item.item_rating}</Table.Cell>\r\n                            <Table.Cell> <Button as={Link} to={`/item/${item.id}`} primary>Show</Button></Table.Cell>\r\n                        </Table.Row>)}\r\n                </Table.Body>\r\n            </Table>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nconst ConnectedProfile = connect(mapStateToProps, null)(UserProfile)\r\nexport default ConnectedProfile","import { connect } from 'react-redux';\nimport React, { useState, useEffect } from 'react'\nimport { Container, Button, Menu } from 'semantic-ui-react'\nimport { BrowserRouter as Router, Route, Link, Redirect, withRouter } from 'react-router-dom'\n\nimport Login from './components/login'\nimport Item from './components/singleItem'\nimport Register from './components/register'\nimport dataService from './services/dataService'\nimport Form from './components/dataForm'\nimport List from './components/dataList'\nimport Notification from './components/notification'\nimport UpdateForm from './components/updateForm'\nimport Profile from './components/profile'\n\nimport { initAll } from './reducers/dataReducer'\nimport { userLogOut } from './reducers/loginReducer'\n\nimport './components/style.css'\n\nconst App = (props) => {\n\n    const [user, setUser] = useState(null)\n    const [activeItem, setActiveItem] = useState('home')\n\n\n    const logOut = () => setUser(null)\n    const matchId = (id) => props.data.find(x => x.id === id.toString())\n    const handleItemClick = (e, { name }) => setActiveItem(name)\n\n    useEffect(() => {\n        const loggedUserJSON = window.localStorage.getItem('loggedappUser')\n        if (loggedUserJSON) {\n            const currentUser = JSON.parse(loggedUserJSON)\n            setUser(JSON.parse(loggedUserJSON))\n            dataService.setToken(currentUser.token)\n        }\n    }, [props])\n\n\n\n    useEffect(() => {\n        props.initAll()\n    }, [])\n\n    const handleLogoOut = (e) => {\n        e.preventDefault()\n        window.localStorage.clear()\n        props.userLogOut()\n        logOut()\n\n    }\n\n    const Nav = () => {\n        return (\n            <Menu size='large'>\n                <Menu.Item name='home' as={Link} to='/' active={activeItem === 'home'} onClick={handleItemClick} />\n                <Menu.Item name='create' as={Link} to='/create' active={activeItem === 'create'} onClick={handleItemClick} />\n                <Menu.Item name='profile' as={Link} to='/profile' active={activeItem === 'profile'} onClick={handleItemClick} />\n                <Menu.Menu position='right'>\n                    <Menu.Item>\n                        <form onSubmit={handleLogoOut}><Button type='submit' primary> Sign out</Button></form>\n                    </Menu.Item>\n                </Menu.Menu>\n            </Menu>\n        )\n    }\n\n    return (\n        <Container>\n            <Router>\n                {user ? Nav() : null}\n                <Route path='/register' render={() => <Register />} />\n                <Route exact path='/' render={() => user ? <List /> : <Redirect to='/login' />} />\n                <Route path='/profile' render={() => user ? <Profile /> : <Redirect to='/login' />} />\n                <Route path='/login' render={() => user === null ? <Login /> : <Redirect to='/' />} />\n                <Route path='/create' render={() => user ? <Form /> : <Redirect to='/login' />} />\n                <Route path='/item/:id' render={({ match }) => <Item item={matchId(match.params.id)} />} />\n                <Route exact path='/edit/:id' render={({ match }) => user ? <UpdateForm item={matchId(match.params.id)} /> : <Redirect to='/login' />} />\n                <Notification />\n            </Router>\n        </Container>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        data: state.data,\n        user: state.user,\n        notification: state.notification\n    }\n}\n\nconst mapDispatchToProps = {\n    initAll,\n    userLogOut\n}\n\nconst ConnectedApp = connect(mapStateToProps, mapDispatchToProps)(App)\nexport default ConnectedApp\n\n// TO DO : FIX ROUTER BUGSS/ CSS / UI RESPONSIVE / MESSAGES / Rate Items","\r\nexport const filterDreams = (data) => {\r\n    return{\r\n        type:'NEW_FILTER',\r\n        data:data\r\n    }\r\n}\r\n\r\nconst filterReducer = (state = '', action) => {\r\n    switch (action.type) {\r\n        case 'NEW_FILTER': return action.data\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default filterReducer","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport dataReducer from './reducers/dataReducer'\r\nimport loginReducer from './reducers/loginReducer'\r\nimport filterReducer from './reducers/filterReducer'\r\nimport registerReducer from './reducers/registerReducer'\r\nimport notificationReducer from './reducers/notificationReducer'\r\n\r\nconst reducer = combineReducers({\r\n    data: dataReducer,\r\n    filter: filterReducer,\r\n    user: loginReducer,\r\n    registeredUser: registerReducer,\r\n    notification: notificationReducer\r\n})\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk))\r\nexport default store","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport App from './App'\r\nimport store from './store'\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\n\r\nconst renderApp = () => {\r\n    ReactDOM.render(\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>,\r\n        document.getElementById('root')\r\n    )\r\n}\r\n\r\nrenderApp()\r\nstore.subscribe(renderApp)"],"sourceRoot":""}
{"version":3,"sources":["services/loginService.js","reducers/loginReducer.js","history.js","reducers/notificationReducer.js","components/login.js","services/signUpService.js","reducers/registerReducer.js","components/register.js","services/dataService.js","reducers/dataReducer.js","components/dataForm.js","components/dataList.js","components/notification.js","components/updateForm.js","App.js","reducers/filterReducer.js","store.js","index.js"],"names":["login","credentials","a","axios","post","res","data","initialState","createHistory","username","token","loginReducer","state","action","type","newNotification","dispatch","message","notificationReducer","console","log","ConnectedLogin","connect","user","userLogin","loginService","then","response","JSON","stringify","window","localStorage","setItem","error","props","useState","setUsername","password","setPassword","Segment","placeholder","Grid","columns","relaxed","stackable","Column","Form","onSubmit","e","preventDefault","Input","icon","value","onChange","target","iconPosition","label","Button","content","primary","verticalAlign","as","Link","to","size","Divider","vertical","withRouter","register","config","headers","registerReducer","registeredUser","mapDispatchToProps","userRegister","signUpService","ConnectedRegister","history","push","Field","required","getAll","get","create","Authorization","update","put","id","remove","delete","setToken","newToken","destroyToken","dataReducer","map","x","filter","newEntry","entry","dataService","ConnectedForm","itemName","setItemName","itemDescription","setItemDescription","image","setImage","item","FormData","append","files","ConnectedList","notification","userLogOut","activeItem","setActiveItem","handleLogoOut","clear","logOut","handleItemClick","name","Menu","Item","active","onClick","position","width","item_name","Image","src","cloudImage","ConnectedNotification","Message","success","Header","style","display","setTimeout","negative","ConnectedUpdateForm","edit","item_description","event","ConnectedApp","initAll","entries","setUser","useEffect","loggedUserJSON","getItem","currentUser","parse","Container","exact","path","render","match","params","find","toString","filterReducer","reducer","combineReducers","store","createStore","applyMiddleware","thunk","renderApp","ReactDOM","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.dd51a60a.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async (credentials) => {\r\n    const res = await axios.post(baseUrl, credentials)\r\n    return res.data\r\n}\r\n\r\nexport default { login }","import loginService from '../services/loginService'\r\n\r\nimport history from '../history'\r\nexport const userLogin = (data) => {\r\n\r\n    return dispatch => {\r\n        const user = loginService.login(data).then(response => {\r\n            dispatch({\r\n                type: 'LOGIN',\r\n                data: JSON.stringify(response)\r\n            })\r\n            dispatch({\r\n                type: 'NEW',\r\n                data: { message: `Welcome ${JSON.stringify(response.username)}`, type: 'success' }\r\n            })\r\n            window.localStorage.setItem(\r\n                'loggedappUser', JSON.stringify(response)\r\n            )\r\n\r\n        },\r\n            error => {\r\n                dispatch({\r\n                    type: 'NEW',\r\n                    data: { message: 'Invalid credentials.', type: 'negative' }\r\n                })\r\n            })\r\n    }\r\n}\r\nexport const userLogOut = () => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: 'LOGOUT'\r\n        })\r\n        dispatch({\r\n            type: 'NEW',\r\n            data: { message: `See ya later.`, type: 'success' }\r\n        })\r\n    }\r\n}\r\nconst initialState = { username: null, token: null }\r\nconst loginReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN': return action.data\r\n        case 'LOGOUT': return initialState\r\n        default: return state\r\n    }\r\n}\r\nexport default loginReducer","import createHistory from 'history/createBrowserHistory'\r\n\r\nexport default createHistory()\r\n","\r\nexport const newNotification = (data) => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: 'NEW',\r\n            data: data\r\n        })\r\n\r\n    }\r\n}\r\nconst initialState = { message: null, type: null }\r\n\r\nconst notificationReducer = (state = initialState, action) => {\r\n    console.log(action.type)\r\n    switch (action.type) {\r\n        case 'NEW': return action.data\r\n        default: return state\r\n    }\r\n}\r\nexport default notificationReducer\r\n","import { connect } from 'react-redux'\r\nimport React, { useState } from 'react'\r\nimport { userLogin } from '../reducers/loginReducer'\r\nimport { newNotification } from '../reducers/notificationReducer'\r\nimport { Button, Divider, Form, Grid, Segment } from 'semantic-ui-react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\n\r\n\r\nconst LoginForm = (props) => {\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault()\r\n        const credentials = {\r\n            username: username,\r\n            password: password\r\n        }\r\n        props.userLogin(credentials)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Segment placeholder>\r\n                <Grid columns={2} relaxed='very' stackable>\r\n                    <Grid.Column>\r\n                        <Form onSubmit={handleLogin}>\r\n                            <Form.Input icon='user' value={username} onChange={({ target }) => setUsername(target.value)} iconPosition='left' label='Username' placeholder='Username' />\r\n                            <Form.Input icon='lock' type='password' value={password} onChange={({ target }) => setPassword(target.value)} iconPosition='left' label='Password' />\r\n                            <Button type='submit' content='Login' primary />\r\n                        </Form>\r\n                    </Grid.Column>\r\n                    <Grid.Column verticalAlign='middle'>\r\n                        <Button as={Link} to='/register' content='Sign up' icon='signup' size='big' />\r\n                    </Grid.Column>\r\n                </Grid>\r\n                <Divider vertical>Or</Divider>\r\n            </Segment>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        user: state.user\r\n    }\r\n}\r\n\r\nconst ConnectedLogin = connect(mapStateToProps, { userLogin })(LoginForm)\r\nexport default withRouter(ConnectedLogin)","import axios from 'axios'\r\nconst baseUrl = '/api/register'\r\n\r\nconst register = async (credentials) => {\r\n    const config = { headers: { 'Content-Type': 'application/json ' } }\r\n    const res = await axios.post(baseUrl, credentials, config)\r\n    return res.data\r\n}\r\nexport default { register }","import signUpService from '../services/signUpService'\r\n\r\n// export const userRegister =  (data) => {\r\n//     return async dispatch => {\r\n//         const userToRegister = await signUpService.register(data)\r\n//         console.log(userToRegister)\r\n\r\n//         dispatch({\r\n//             type: 'REGISTER',\r\n//             registeredUser: userToRegister\r\n//         })\r\n//     }\r\n// }\r\n\r\nexport const userRegister = (data) => {\r\n    return dispatch => {\r\n        return signUpService.register(data).then(\r\n            response => {\r\n                dispatch({\r\n                    type: 'REGISTER',\r\n                    registeredUser: response.data\r\n                })\r\n                dispatch({\r\n                    type: 'NEW',\r\n                    data: { message: 'Success! You can log in now :)', type: 'success' }\r\n                })\r\n            },\r\n            error => {\r\n                dispatch({\r\n                    type: 'NEW',\r\n                    data: { message: 'There is some kind of error, try again.', type: 'negative' }\r\n                })\r\n            }\r\n        )\r\n\r\n    }\r\n}\r\nconst registerReducer = (state = {}, action) => {\r\n    console.log(action.type)\r\n    console.log(action.registeredUser)\r\n\r\n    switch (action.type) {\r\n        default: return state\r\n    }\r\n\r\n}\r\nexport default registerReducer\r\n\r\n\r\n\r\n","import React, { useState } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { userRegister } from '../reducers/registerReducer'\r\nimport { newNotification } from '../reducers/notificationReducer'\r\nimport { Form, Button } from 'semantic-ui-react'\r\nimport { connect } from 'react-redux'\r\nconst Register = (props) => {\r\n\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        const user = { username: username, password: password }   \r\n        props.userRegister(user)\r\n        props.history.push('/login')\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Form.Field>\r\n                <label>First Name</label>\r\n                <input placeholder='First Name' value={username} onChange={({ target }) => setUsername(target.value)} required />\r\n            </Form.Field>\r\n            <Form.Field>\r\n                <label>Last Name</label>\r\n                <input placeholder='Password' type='password' value={password} onChange={({ target }) => setPassword(target.value)} required />\r\n            </Form.Field>\r\n            <Button type='submit'>Submit</Button>\r\n        </Form>\r\n    )\r\n\r\n}\r\nconst mapDispatchToProps = {\r\n    userRegister,\r\n    newNotification\r\n}\r\nconst ConnectedRegister = connect(null, mapDispatchToProps)(Register)\r\nexport default withRouter(ConnectedRegister)","import axios from 'axios'\r\nconst baseUrl = '/api/items'\r\n\r\nlet token = null\r\nconst setToken = newToken => {\r\n    token = `bearer ${newToken}`\r\n}\r\nconst destroyToken = () => {\r\n    token = null\r\n  }\r\nconst getAll = async () => {\r\n    const res = await axios.get(baseUrl)\r\n    return res.data\r\n}\r\n\r\nconst create = async (data) => {\r\n    const config = {\r\n        headers: { 'content-type': 'multipart/form-data', Authorization: token }\r\n    }\r\n    const res = await axios.post(baseUrl, data, config)\r\n    return res.data\r\n}\r\n\r\nconst update = async (data) => {\r\n    const res = await axios.put(`${baseUrl}/${data.id}`, data)\r\n    return res.data\r\n}\r\n\r\nconst remove = async (data) => {\r\n    const res = await axios.delete(`${baseUrl}/${data.id}`)\r\n}\r\n\r\nexport default { getAll, create, update, remove, setToken ,destroyToken}","\r\nimport dataService from '../services/dataService'\r\n\r\n\r\nexport const newEntry = (data) => {\r\n    return dispatch => {\r\n        const entry = dataService.create(data).then(response => {\r\n            dispatch({\r\n                type: 'CREATE',\r\n                data: entry\r\n            })\r\n            dispatch({\r\n                type: 'NEW',\r\n                data: { message: 'Success! New item added!', type: 'success' }\r\n            })\r\n        },\r\n            error => {\r\n                dispatch({\r\n                    type: 'NEW',\r\n                    data: { message: 'Error creating item. Please try again.', type: 'negative' }\r\n                })\r\n            })\r\n\r\n    }\r\n}\r\nexport const initAll = (data) => {\r\n    return async dispatch => {\r\n        const entries = await dataService.getAll(data)\r\n        dispatch({\r\n            type: 'INIT',\r\n            data: entries\r\n        })\r\n    }\r\n}\r\nexport const edit = (data) => {\r\n    return async dispatch => {\r\n        const entry = await dataService.update(data).then(response => {\r\n            dispatch({\r\n                type: 'UPDATE',\r\n                data: entry\r\n            })\r\n            dispatch({\r\n                type: 'NEW',\r\n                data: { message: 'Success! Item updated!', type: 'success' }\r\n            })\r\n\r\n        },\r\n            error => {\r\n                dispatch({\r\n                    type: 'NEW',\r\n                    data: { message: 'Error updating item. Please try again.', type: 'negative' }\r\n                })\r\n            })\r\n\r\n    }\r\n}\r\nexport const remove = (data) => {\r\n    return async dispatch => {\r\n        const entry = await dataService.remove(data).then(response => {\r\n            dispatch({\r\n                type: 'DELETE',\r\n                id: data.id\r\n            })\r\n            dispatch({\r\n                type: 'NEW',\r\n                data: { message: 'Success! Item removed!', type: 'success' }\r\n            })\r\n        },\r\n            error => {\r\n                dispatch({\r\n                    type: 'NEW',\r\n                    data: { message: 'Error deleting item. Please try again.', type: 'negative' }\r\n                })\r\n            })\r\n\r\n    }\r\n}\r\n\r\nconst dataReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'INIT': return action.data\r\n        case 'CREATE': return [...state, action.data]\r\n        case 'UPDATE': return state.map(x => x.id === action.data.id ? x : action.data)\r\n        case 'DELETE': return state.filter(x => x.id !== action.data.id)\r\n        default: return state\r\n    }\r\n\r\n}\r\n\r\nexport default dataReducer","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { newEntry } from '../reducers/dataReducer'\r\nimport { newNotification } from '../reducers/notificationReducer'\r\n\r\nconst DataForm = (props) => {\r\n    const [itemName, setItemName] = useState('')\r\n    const [itemDescription, setItemDescription] = useState('')\r\n    const [image, setImage] = useState(null)\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        const item = new FormData()\r\n\r\n        item.append('item_name', itemName)\r\n        item.append('item_description', itemDescription)\r\n        item.append('clodImage', image)\r\n        props.newEntry(item)\r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div><input type='text' value={itemName} onChange={({ target }) => setItemName(target.value)} /></div>\r\n            <div><input type='text' value={itemDescription} onChange={({ target }) => setItemDescription(target.value)} /></div>\r\n            <input type=\"file\" onChange={({ target }) => setImage(target.files[0])} />\r\n            <button type='submit'>Sumbit</button>\r\n        </form>\r\n    )\r\n}\r\nconst mapDispatchToProps = {\r\n    newEntry,\r\n    newNotification\r\n}\r\n\r\nconst ConnectedForm = connect(null, mapDispatchToProps)(DataForm)\r\nexport default ConnectedForm","import React, { useState } from 'react'\r\nimport { Grid, Image } from 'semantic-ui-react'\r\nimport { connect } from 'react-redux'\r\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom'\r\nimport { Container, Button, Dropdown, Menu } from 'semantic-ui-react'\r\nimport { userLogOut } from '../reducers/loginReducer'\r\nconst DataList = (props) => {\r\n    const [activeItem, setActiveItem] = useState('home')\r\n    const handleLogoOut = (e) => {\r\n        e.preventDefault()\r\n        window.localStorage.clear()\r\n        props.userLogOut()\r\n        props.history.push('/login')\r\n        props.logOut()\r\n    }\r\n    const handleItemClick = (e, { name }) => setActiveItem(name)\r\n\r\n    const Nav = () => {\r\n        return (\r\n            <Menu size='large'>\r\n                <Menu.Item name='home' as={Link} to='/' active={activeItem === 'home'} onClick={handleItemClick} />\r\n                <Menu.Item name='create' as={Link} to='/create' active={activeItem === 'messages'} onClick={handleItemClick} />\r\n                <Menu.Menu position='right'>\r\n                    <Menu.Item>\r\n                        <form onSubmit={handleLogoOut}><Button type='submit' primary> Login</Button></form>\r\n                    </Menu.Item>\r\n                </Menu.Menu>\r\n            </Menu>\r\n        )\r\n    }\r\n    return (\r\n        <div>\r\n            <Nav />\r\n            {props.data.map(x => <Grid>\r\n                <Grid.Column width={4}>\r\n                    {x.item_name}\r\n                </Grid.Column>\r\n                <Grid.Column width={9}>\r\n                    <Image src={x.cloudImage} />\r\n                </Grid.Column>\r\n                <Button as={Link} to={`/edit/${x.id}`} primary>Edit</Button>\r\n            </Grid>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        data: state.data,\r\n        user: state.user,\r\n        notification: state.notification\r\n    }\r\n}\r\n\r\nconst ConnectedList = connect(mapStateToProps, { userLogOut })(DataList)\r\nexport default withRouter(ConnectedList)","import React from 'react'\r\nimport { Message } from 'semantic-ui-react'\r\nimport { connect } from 'react-redux'\r\nimport { newNotification } from '../reducers/notificationReducer'\r\nconst Notification = (props) => {\r\n    if (props.notification.message === null) {\r\n        return null\r\n    }\r\n\r\n    const type = props.notification.type === 'success' ? 'positive' : 'negative'\r\n    if (props.notification.type === 'success') {\r\n        return (\r\n            <div>\r\n                <Message success >\r\n                    <Message.Header>{props.notification.message}</Message.Header>\r\n                </Message>\r\n                <p style={{ display: 'none'} } > { setTimeout(()=> props.newNotification({message: null, type: null }),3000)}</p>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div>\r\n            <Message negative>\r\n                <Message.Header>{props.notification.message}</Message.Header>\r\n                <p>Try again please.</p>\r\n                <p style={{ display: 'none'} } > { setTimeout(()=> props.newNotification({message: null, type: null }),5000)}</p>\r\n        </Message>\r\n        \r\n        </div >\r\n    )\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        notification: state.notification\r\n    }\r\n}\r\nconst ConnectedNotification = connect(mapStateToProps, { newNotification })(Notification)\r\nexport default ConnectedNotification ","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { edit } from '../reducers/dataReducer'\r\n\r\n\r\nconst DataForm = (props) => {\r\n\r\n    const [itemName, setItemName] = useState(props.item.item_name)\r\n    const [itemDescription, setItemDescription] = useState(props.item.item_description)\r\n    const [image, setImage] = useState(null)\r\n\r\n    const handleTitleChange = (event) => {\r\n        setItemName(event.target.value)\r\n    }\r\n    const handleDescriptionChange = (event) => {\r\n        setItemDescription(event.target.value)\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        console.log(itemName);\r\n        const item = new FormData()\r\n\r\n        item.append('item_name', itemName)\r\n        item.append('item_description', itemDescription)\r\n        item.append('clodImage', image)\r\n        props.edit(item)\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div><input type='text' value={itemName} onChange={handleTitleChange} /></div>\r\n            <div><input type='text' value={itemDescription} onChange={handleDescriptionChange} /></div>\r\n            <input type=\"file\" onChange={({ target }) => setImage(target.files[0])} />\r\n            <button type='submit'>Update</button>\r\n        </form>\r\n    )\r\n}\r\nconst ConnectedUpdateForm = connect(null, { edit })(DataForm)\r\nexport default ConnectedUpdateForm","import React, { useState, useEffect } from 'react';\nimport Login from './components/login'\nimport Register from './components/register'\nimport dataService from './services/dataService'\nimport Form from './components/dataForm'\nimport List from './components/dataList'\nimport Notification from './components/notification'\nimport UpdateForm from './components/updateForm'\nimport { initAll } from './reducers/dataReducer'\nimport { BrowserRouter as Router, Route, Link, Redirect } from 'react-router-dom'\nimport { Container, Button, Dropdown, Menu } from 'semantic-ui-react'\nimport { connect } from 'react-redux';\nconst App = (props) => {\n\n    const [user, setUser] = useState(null)\n    const logOut = () => {\n        setUser(null)\n    }\n    useEffect(() => {\n        const loggedUserJSON = window.localStorage.getItem('loggedappUser')\n        if (loggedUserJSON) {\n            const currentUser = JSON.parse(loggedUserJSON)\n            setUser(JSON.parse(loggedUserJSON))\n            dataService.setToken(currentUser.token)\n        }\n    }, [props])\n\n\n    useEffect(() => {\n        props.initAll()\n        console.log(loggedUserJSON)\n        const loggedUserJSON = window.localStorage.getItem('loggedappUser')\n        if (!loggedUserJSON) {\n            setUser(null)\n        }\n    }, [])\n\n    const matchId = (id) => props.data.find(x => x.id === id.toString())\n\n    // const handleLogoOut = () => {\n    //     window.localStorage.clear()\n    // }\n    // const handleItemClick = (e, { name }) => setActiveItem(name)\n\n    return (\n        <Container>\n            <Router>\n\n                <Route exact path='/edit/:id' render={({ match }) => <UpdateForm item={matchId(match.params.id)} />} />\n                <Route exact path='/' render={() => user ? <List logOut={logOut} /> : <Redirect to='/login' />} />\n                <Route path='/login' render={() => user === null ? <Login /> : <Redirect to='/' />} />\n                <Route path='/register' render={() => <Register />} />\n                <Route path='/create' render={() => <Form />} />\n                <Notification />\n            </Router>\n        </Container>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        data: state.data,\n        user: state.user,\n        notification: state.notification\n    }\n}\nconst ConnectedApp = connect(mapStateToProps, { initAll })(App)\nexport default ConnectedApp\n","\r\nexport const filterDreams = (data) => {\r\n    return{\r\n        type:'NEW_FILTER',\r\n        data:data\r\n    }\r\n}\r\n\r\nconst filterReducer = (state = '', action) => {\r\n    switch (action.type) {\r\n        case 'NEW_FILTER': return action.data\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default filterReducer","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport dataReducer from './reducers/dataReducer'\r\nimport loginReducer from './reducers/loginReducer'\r\nimport filterReducer from './reducers/filterReducer'\r\nimport registerReducer from './reducers/registerReducer'\r\nimport notificationReducer from './reducers/notificationReducer'\r\n\r\nconst reducer = combineReducers({\r\n    data: dataReducer,\r\n    filter: filterReducer,\r\n    user: loginReducer,\r\n    registeredUser: registerReducer,\r\n    notification: notificationReducer\r\n})\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk))\r\nexport default store","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport App from './App'\r\nimport store from './store'\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\n\r\nconst renderApp = () => {\r\n    ReactDOM.render(\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>,\r\n        document.getElementById('root')\r\n    )\r\n}\r\n\r\nrenderApp()\r\nstore.subscribe(renderApp)"],"sourceRoot":""}